# File: .cm/gitstream.cm
# GitStream configuration file

manifest:
  version: 1.0

# Define automated checks
automations:
  # Check for proper labels
  label_check:
    if:
      - true
    run:
      - action: add-label@v1
        args:
          label: "needs-review"
          color: "#FBCA04"

  # Check for ClickUp ticket links
  clickup_link_check:
    if:
      - {{ not (pr.description | includes('clickup.com')) }}
    run:
      - action: add-comment@v1
        args:
          comment: "Please add a ClickUp ticket link to the PR description."

  # Check for proper description
  description_check:
    if:
      - {{ pr.description | length < 50 }}
    run:
      - action: add-comment@v1
        args:
          comment: "Please provide a more detailed description of your changes."

  # Check for Sonar Quality Gate
  sonar_check:
    if:
      - {{ not (pr.checks.conclusion.sonarqube == 'success') }}
    run:
      - action: add-comment@v1
        args:
          comment: "Please ensure the Sonar Quality Gate passes before merging."

  # Check for proper directory structure
  directory_structure_check:
    if:
      - {{ files | match(regex=r'(enums|classes|interfaces)\/.*\.(js|ts)$') | nope }}
    run:
      - action: add-comment@v1
        args:
          comment: "Please ensure enums, classes, and interfaces are placed in the appropriate utility directory."

  # Check for proper naming conventions
  naming_convention_check:
    if:
      - {{ files | match(regex=r'[A-Z][a-z0-9]+([A-Z][a-z0-9]+)*\.js') | nope }}
    run:
      - action: add-comment@v1
        args:
          comment: "Please use PascalCase for component files and camelCase for other JavaScript/TypeScript files."

  # Check for test files
  test_file_check:
    if:
      - {{ files | match(regex=r'\.spec\.(js|ts)$') | nope }}
    run:
      - action: add-comment@v1
        args:
          comment: "Please ensure you've added corresponding test files for your changes."

  # Check for proper commenting (basic check)
  comment_check:
    if:
      - {{ files | match(regex=r'\/\*\*[\s\S]*?\*\/') | nope }}
    run:
      - action: add-comment@v1
        args:
          comment: "Please add JSDoc style comments to your code where appropriate."

# You can add more checks based on your specific requirements